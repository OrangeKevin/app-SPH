{"remainingRequest":"/Users/kevin/Desktop/project-SPH/app/node_modules/babel-loader/lib/index.js!/Users/kevin/Desktop/project-SPH/app/src/store/home/index.js","dependencies":[{"path":"/Users/kevin/Desktop/project-SPH/app/src/store/home/index.js","mtime":1644312517314},{"path":"/Users/kevin/Desktop/project-SPH/app/babel.config.js","mtime":1639385802937},{"path":"/Users/kevin/Desktop/project-SPH/app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/kevin/Desktop/project-SPH/app/node_modules/babel-loader/lib/index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9Vc2Vycy9rZXZpbi9EZXNrdG9wL3Byb2plY3QtU1BIL2FwcC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXN5bmNUb0dlbmVyYXRvci5qcyI7CmltcG9ydCAicmVnZW5lcmF0b3ItcnVudGltZS9ydW50aW1lLmpzIjsKaW1wb3J0IHsgcmVxQ2F0ZWdvcnlMaXN0IH0gZnJvbSAiQC9hcGkiOwp2YXIgc3RhdGUgPSB7CiAgLy9zdGF0Zem7mOiupOWIneWni+WAvOWIq+eejuWGme+8jOagueaNruaOpeWPo+i/lOWbnuWAvOexu+Wei+ehruWumgogIGNhdGVnb3J5TGlzdDogW10KfTsKdmFyIG11dGF0aW9ucyA9IHsKICBDQVRFR09SWUxJU1Q6IGZ1bmN0aW9uIENBVEVHT1JZTElTVChzdGF0ZSwgY2F0ZWdvcnlMaXN0KSB7CiAgICBzdGF0ZS5jYXRlZ29yeUxpc3QgPSBjYXRlZ29yeUxpc3Q7CiAgfQp9Owp2YXIgYWN0aW9ucyA9IHsKICBjYXRlZ29yeUxpc3Q6IGZ1bmN0aW9uIGNhdGVnb3J5TGlzdChfcmVmKSB7CiAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlKCkgewogICAgICB2YXIgY29tbWl0LCByZXN1bHQ7CiAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlJChfY29udGV4dCkgewogICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICBjb21taXQgPSBfcmVmLmNvbW1pdDsKICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMzsKICAgICAgICAgICAgICByZXR1cm4gcmVxQ2F0ZWdvcnlMaXN0KCk7CgogICAgICAgICAgICBjYXNlIDM6CiAgICAgICAgICAgICAgcmVzdWx0ID0gX2NvbnRleHQuc2VudDsKCiAgICAgICAgICAgICAgaWYgKHJlc3VsdC5jb2RlID09IDIwMCkgewogICAgICAgICAgICAgICAgY29tbWl0KCJDQVRFR09SWUxJU1QiLCByZXN1bHQuZGF0YSk7CiAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgY2FzZSA1OgogICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5zdG9wKCk7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9LCBfY2FsbGVlKTsKICAgIH0pKSgpOwogIH0KfTsKdmFyIGdldHRlcnMgPSB7fTsKZXhwb3J0IGRlZmF1bHQgewogIHN0YXRlOiBzdGF0ZSwKICBtdXRhdGlvbnM6IG11dGF0aW9ucywKICBhY3Rpb25zOiBhY3Rpb25zLAogIGdldHRlcnM6IGdldHRlcnMKfTs="},{"version":3,"sources":["/Users/kevin/Desktop/project-SPH/app/src/store/home/index.js"],"names":["reqCategoryList","state","categoryList","mutations","CATEGORYLIST","actions","commit","result","code","data","getters"],"mappings":";;AAAA,SAASA,eAAT,QAAgC,OAAhC;AACA,IAAMC,KAAK,GAAG;AACZ;AACAC,EAAAA,YAAY,EAAE;AAFF,CAAd;AAIA,IAAMC,SAAS,GAAG;AAChBC,EAAAA,YADgB,wBACHH,KADG,EACIC,YADJ,EACkB;AAChCD,IAAAA,KAAK,CAACC,YAAN,GAAqBA,YAArB;AACD;AAHe,CAAlB;AAKA,IAAMG,OAAO,GAAG;AACRH,EAAAA,YADQ,8BACc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAARI,cAAAA,MAAQ,QAARA,MAAQ;AAAA;AAAA,qBACPN,eAAe,EADR;;AAAA;AACtBO,cAAAA,MADsB;;AAE1B,kBAAGA,MAAM,CAACC,IAAP,IAAe,GAAlB,EAAsB;AACpBF,gBAAAA,MAAM,CAAC,cAAD,EAAiBC,MAAM,CAACE,IAAxB,CAAN;AACD;;AAJyB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAK3B;AANa,CAAhB;AAQA,IAAMC,OAAO,GAAG,EAAhB;AAEA,eAAe;AACbT,EAAAA,KAAK,EAALA,KADa;AAEbE,EAAAA,SAAS,EAATA,SAFa;AAGbE,EAAAA,OAAO,EAAPA,OAHa;AAIbK,EAAAA,OAAO,EAAPA;AAJa,CAAf","sourcesContent":["import { reqCategoryList } from \"@/api\";\nconst state = {\n  //state默认初始值别瞎写，根据接口返回值类型确定\n  categoryList: []\n};\nconst mutations = {\n  CATEGORYLIST(state, categoryList) {\n    state.categoryList = categoryList\n  }\n};\nconst actions = {\n  async categoryList({commit}){\n    let result = await reqCategoryList()\n    if(result.code == 200){\n      commit(\"CATEGORYLIST\", result.data)\n    }\n  }\n};\nconst getters = {};\n\nexport default {\n  state,\n  mutations,\n  actions,\n  getters\n}"]}]}